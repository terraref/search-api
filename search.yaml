openapi: 3.0.0
info:
  description: Search api for TERRA project
  version: "1.0.0"
  title: TERRA advanced search api
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: http://localhost:5000/
    description: Test Server
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /search:
    get:
      tags:
      - Search
      summary: Search with filters applied
      description: Search method.
      parameters:
      - name: season
        in: query
        description: Filter by season. Season name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: query
        description: Filter by experimentId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cultivarId
        in: query
        description: Filter by program cultivarId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: treatmentId
        in: query
        description: Filter by treatment.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
  /calls:
    get:
      tags:
        - Calls
      summary: Get the list of implemented Calls
      description: " Implementation Notes\nHaving a consistent structure for the path\
        \ string of each call is very important for teams to be able to connect and\
        \ find errors. Read more on Github.\nHere are the rules for the path of each\
        \ call that should be returned\n\n\n\nEvery word in the call path should match\
        \ the documentation exactly, both in spelling and capitalization. Note that\
        \ path strings are all lower case, but path parameters are camel case.\n\n\
        Each path should start relative to \"/\" and therefore should not include\
        \ \"/\"\n\nNo leading or trailing slashes (\"/\") \n\nPath parameters are\
        \ wrapped in curly braces (\"{}\"). The name of the path parameter should\
        \ be spelled exactly as it is specified in the documentation.\n\n\n\n\nExamples\
        \ GOOD    \"call\": \"germplasm/{germplasmDbId}/markerprofiles\" BAD    \"\
        call\": \"germplasm/{id}/markerprofiles\" BAD    \"call\": \"germplasm/{germplasmDbId}/markerProfiles\"\
        \ BAD    \"call\": \"germplasm/{germplasmdbid}/markerprofiles\" BAD    \"\
        call\": \"brapi/v1/germplasm/{germplasmDbId}/markerprofiles\" BAD    \"call\"\
        : \"/germplasm/{germplasmDbId}/markerprofiles/\" BAD    \"call\": \"germplasm/<germplasmDbId>/markerprofiles\"\
        \n\n\n\ntest-server.brapi.org/brapi/v1/calls"
      parameters:
        - name: datatype
          in: query
          description: DEPRECATED in v1.3 - see dataType (camel case)
          required: false
          deprecated: true
          style: form
          explode: true
          schema:
            type: string
        - name: dataType
          in: query
          description: 'The data format supported by the call. Example: `json`'
          required: false
          style: form
          explode: true
          schema:
            $ref: '#/components/schemas/WSMIMEDataTypes'
        - name: page
          in: query
          description: Which result page is requested. The page indexing starts at 0
            (the first page is 'page'= 0). Default is `0`.
          required: false
          style: form
          explode: true
          schema:
            type: integer
          example: "0"
        - name: pageSize
          in: query
          description: The size of the pages to be returned. Default is `1000`.
          required: false
          style: form
          explode: true
          schema:
            type: integer
          example: 1000
        - name: Authorization
          in: header
          description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
          required: false
          style: simple
          explode: false
          schema:
            pattern: ^Bearer .*$
            type: string
          example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/callsResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 103
                    totalPages: 52
                  status: []
                result:
                  data:
                    - call: allelematrices
                      dataTypes:
                        - application/json
                      datatypes:
                        - application/json
                      methods:
                        - GET
                      versions:
                        - "1.0"
                        - "1.1"
                        - "1.2"
                        - "1.3"
                    - call: allelematrices-search
                      dataTypes:
                        - application/json
                      datatypes:
                        - application/json
                      methods:
                        - GET
                        - POST
                      versions:
                        - "1.2"
                        - "1.3"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action
components:
  schemas:
    searchResponse:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object
    metadata_pagination:
      type: object
      properties:
        currentPage:
          type: integer
        pageSize:
          type: integer
        totalCount:
          type: integer
        totalPages:
          type: integer
      description: The pagination object is applicable only when the payload contains
        a "data" key. It describes the pagination of the data contained in the "data"
        array, as a way to identify which subset of data is being returned. Pages
        are zero indexed, so the first page will be page 0 (zero).
    metadata:
      type: object
      properties:
        datafiles:
          type: array
          description: The datafiles key contains a list of file paths, which can
            be relative or complete URLs. These files contain additional information
            related to the returned object and can be retrieved by a subsequent call.
            The empty list should be returned if no additional data files are present.
          items:
            type: string
        pagination:
          $ref: '#/components/schemas/metadata_pagination'
        status:
          type: array
          description: The status field contains a list of informational status messages
            from the server. If no status is reported, an empty list should be returned.
            See Error Reporting for more information.
#          items:
#            $ref: '#/components/schemas/status'
    WSMIMEDataTypes:
      type: string
      enum:
        - application/json
        - text/csv
        - text/tsv
        - application/flapjack
    call:
      required:
        - call
        - dataTypes
        - methods
      type: object
      properties:
        call:
          type: string
          description: The name of the available call as recorded in the documentation
        dataTypes:
          type: array
          description: The possible data formats returned by the available call
          items:
            $ref: '#/components/schemas/WSMIMEDataTypes'
        datatypes:
          type: array
          description: DEPRECATED in v1.3 - see "dataTypes" (camel case)
          deprecated: true
          items:
            $ref: '#/components/schemas/WSMIMEDataTypes'
        methods:
          type: array
          description: The possible HTTP Methods to be used with the available call
          items:
            type: string
            enum:
              - GET
              - POST
              - PUT
              - DELETE
        versions:
          type: array
          description: The supported versions of a particular call
          items:
            type: string
            enum:
              - "1.0"
              - "1.1"
              - "1.2"
              - "1.3"
    callsResponse_result:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          description: Array of availible calls on this server
          items:
            $ref: '#/components/schemas/call'
    callsResponse:
      required:
        - metadata
        - result
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/metadata'
        result:
          $ref: '#/components/schemas/callsResponse_result'