openapi: 3.0.0
info:
  description: Search api for TERRA project
  version: "1.0.0"
  title: TERRA advanced search api
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: http://localhost:5000/
    description: Test Server
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /search:
    get:
      tags:
      - Search
      summary: Search with filters applied
      description: Search method.
      parameters:
      - name: season
        in: query
        description: Filter by season. Season name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: query
        description: Filter by experimentId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cultivarId
        in: query
        description: Filter by program cultivarId.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: treatmentId
        in: query
        description: Filter by treatment.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Which result page is requested. The page indexing starts at 0
          (the first page is 'page'= 0). Default is `0`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: "0"
      - name: pageSize
        in: query
        description: The size of the pages to be returned. Default is `1000`.
        required: false
        style: form
        explode: true
        schema:
          type: integer
        example: 1000
      - name: Authorization
        in: header
        description: "HTTP HEADER - Token used for Authorization \n\n<strong>Bearer\
          \ {token_string} </strong>"
        required: false
        style: simple
        explode: false
        schema:
          pattern: ^Bearer .*$
          type: string
        example: Bearer XXXX
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
              example:
                metadata:
                  datafiles: []
                  pagination:
                    currentPage: 0
                    pageSize: 2
                    totalCount: 2
                    totalPages: 1
                  status: []
                result:
                  data:
                  - abbreviation: P1
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 1
                    objective: Global Population Improvement
                    programDbId: "1"
                    programName: Program 1
                  - abbreviation: P2
                    commonCropName: Tomatillo
                    documentationURL: https://brapi.org
                    leadPerson: Name Nameson
                    leadPersonDbId: person1
                    leadPersonName: Name Nameson
                    name: Program 2
                    objective: XYZ
                    programDbId: "2"
                    programName: Program 2
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example: |-
                ERROR - 2018-10-08T20:15:11Z - Malformed JSON Request Object
                ERROR - 2018-10-08T20:15:11Z - Invalid query parameter
                ERROR - 2018-10-08T20:15:11Z - Required parameter is missing
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - Missing or expired authorization
                token
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example: ERROR - 2018-10-08T20:15:11Z - User does not have permission
                to perform this action